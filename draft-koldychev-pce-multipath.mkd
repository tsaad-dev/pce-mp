---
title: PCEP Extensions for Signaling Multipath Information
abbrev: PCEP Extensions for Multipath
docname: draft-koldychev-pce-multipath-01
category: std
ipr: trust200902

stand_alone: yes
pi: [toc, sortrefs, symrefs]

author:
 -
    ins: M. Koldychev
    name: Mike Koldychev
    organization: Cisco Systems, Inc.
    email: mkoldych@cisco.com
 -
    ins: S. Sivabalan
    name: Siva Sivabalan
    organization: Cisco Systems, Inc.
    email: msiva@cisco.com
 -
    ins: T. Saad
    name: Tarek Saad
    organization: Juniper Networks, Inc.
    email: tsaad@juniper.net
 -
    ins: V. Beeram
    name: Vishnu Pavan Beeram
    organization: Juniper Networks, Inc.
    email: vbeeram@juniper.net
 -
    ins: H. Bidgoli
    name: Hooman Bidgoli
    organization: Nokia
    email: hooman.bidgoli@nokia.com
 -
    ins: B. Yadav
    name: Bhupendra Yadav
    organization: Ciena
    email: byadav@ciena.com




normative:
  RFC2119:

informative:

--- abstract

Current PCEP standards allow only one intended and/or actual path to be present
in a PCEP report or update. Applications that require multipath support such as
SR Policy require an extension to allow signaling multiple intended and/or
actual paths within a single PCEP message. This document introduces such an
extension. Encoding of multiple intended and/or actual paths is done by
encoding multiple Explicit Route Objects (EROs) and/or multiple Record Route
Objects (RROs). A special separator object is defined in this document, to
facilitate this. This mechanism is applicable to SR-TE and RSVP-TE and is
dataplane agnostic.

--- middle

# Introduction

Path Computation Element (PCE) Communication Protocol (PCEP)
{{!RFC5440}} enables the communication between a Path Computation Client
(PCC) and a Path Control Element (PCE), or between two PCEs based on
the PCE architecture {{?RFC4655}}.

PCEP Extensions for the Stateful PCE Model {{!RFC8231}} describes a set
of extensions to PCEP that enable active control of Multiprotocol Label
Switching Traffic Engineering (MPLS-TE) and Generalized MPLS (GMPLS)
tunnels.  {{!RFC8281}} describes the setup and teardown of PCE-initiated
LSPs under the active stateful PCE model, without the need for local
configuration on the PCC, thus allowing for dynamic centralized
control of a network.

PCEP Extensions for Segment Routing {{!I-D.ietf-pce-segment-routing}}
specifies extensions to the Path Computation Element Protocol (PCEP)
that allow a stateful PCE to compute and initiate Traffic Engineering
(TE) paths, as well as for a PCC to request a path subject to certain
constraint(s) and optimization criteria in SR networks.

Segment Routing Policy for Traffic Engineering
{{!I-D.ietf-spring-segment-routing-policy}} details the concepts of SR
Policy and approaches to steering traffic into an SR Policy.  In
particular, it describes the SR candidate-path as a collection of one
or more Segment-Lists.  The current PCEP standards only allow for
signaling of one Segment-List per Candidate-Path.  PCEP extension to
support Segment Routing Policy Candidate Paths
{{!I-D.barth-pce-segment-routing-policy-cp}} specifically avoids
defining how to signal multipath information, and states that this
will be defined in another document.

This document defines the required extensions that allow the signaling
of multipath information via PCEP.

# Terminology

In this document, the key words "MUST", "MUST NOT", "REQUIRED",
"SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
and "OPTIONAL" are to be interpreted as described in BCP 14, RFC 2119
{{RFC2119}}.

## Terms and Abbreviations

The following terms are used in this document:

PCEP Tunnel:

> The object identified by the PLSP-ID, see {{!I-D.koldychev-pce-operational}} for more details.

# Motivation

This extension is motivated by the use-cases described below.

## Signaling Multiple Segment-Lists of an SR Candidate-Path

The Candidate-Path of an SR Policy is the unit of report/update in PCEP, see
{{!I-D.barth-pce-segment-routing-policy-cp}}.  Each Candidate-Path can
contain multiple Segment-Lists and each Segment-List is encoded by
one SR-ERO object.  However, each PCEP LSP can contain only a
single SR-ERO object, which prevents us from encoding multiple Segment-
Lists within the same SR Candidate-Path.

With the help of the protocol extensions defined in this document,
this limitation is overcome.

## Splitting of Requested Bandwidth

A PCC may request a path with 100 Gbps of bandwidth, but all links in the
network have only 50 Gbps capacity.  The PCE can return two paths, that can
each carry 50 Gbps. The PCC can then equally or unequally split the incoming
100 Gbps of traffic among the two 50 Gbps paths. {{WEIGHT-TLV}} introduces a
new TLV that carries the path weight that allows for distribution of incoming
traffic on to the multiple paths.

## Providing Backup path for Protection

It is desirable for the PCE to compute and signal to the PCC a backup path
that is used to protect a primary path. 

When multipath is used, a backup path may protect one or more primary
paths.  For this reason, a primary and backup path identifiers are needed to
indicate which backup path(s) protect which primary path(s).
{{BACKUP-TLV}} introduces a new TLV that carries the required information.


# Protocol Extensions

## Multipath Capability TLV

We define the MULTIPATH-CAP TLV that MAY be present in the OPEN
object and/or the LSP object.  The purpose of this TLV is two-fold:

   1.  From PCC: it tells how many multipaths the PCC can install in
       forwarding.

   2.  From PCE: it tells that the PCE supports this standard and how
       many multipaths the PCE can compute.

Only the first instance of this TLV can be processed, subsequent
instances SHOULD be ignored.

~~~
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |             Type              |             Length            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     Number of Multipaths      |            Reserved       |B|W|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~
{: #fig-multipath-cap title="MULTIPATH-CAP TLV format"}

   Type: TBD1 for "MULTIPATH-CAP" TLV.

   Length: 4.

   Number of Multipaths: the maximum number of multipaths that a PCE can return. The value
   0 indicates unlimited number.

   B-flag: whether MULTIPATH-BACKUP-TLV is supported.

   W-flag: whether MULTIPATH-WEIGHT-TLV is supported.

   Reserved: zero on transmit, ignore on receipt.


##  Path Attributes Object

We define the PATH-ATTRIB object that is used to carry per-path
information and to act as a separator between several ERO/RRO objects in the intended-path/actual-path RBNF element.
The PATH-ATTRIB object always precedes the ERO/RRO that it applies to.  If
multiple ERO/RRO objects are present, then each ERO/RRO object MUST be
preceded by an PATH-ATTRIB object that describes it.

~~~
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                         Flags                           | Oper|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                         Path ID.                              |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  ~                          Optional TLVs                        ~
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~
{: #fig-path-attrib title="PATH-ATTRIB object format"}

   Flags: to be extended in the future.

   Oper: operational state of the path, same values as the identically
   named field in the LSP object.

   Path ID: 4-octet identifier that identifies a path in the set of
   multiple paths.

##  Multipath Weight TLV {#WEIGHT-TLV}

   We define the MULTIPATH-WEIGHT TLV that MAY be present in the
   PATH-ATTRIB object.

~~~
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |             Type              |             Length            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                             Weight                            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~
{: #fig-multipath-path-attrib title="MULTIPATH-WEIGHT TLV format"}

   Type: TBD2 for "MULTIPATH-WEIGHT" TLV.

   Length: 4.

   Weight: weight of this path within the multipath, if W-ECMP is
   desired. The fraction of flows a specific ERO/RRO carries is derived
   from the ratio of its weight to the sum of all other multipath ERO/RRO weights.

##  Multipath Backup TLV {#BACKUP-TLV}

   This document introduces a new MULTIPATH-BACKUP TLV that is optional and can
   be present in the PATH-ATTRIB object.

   This TLV is used to indicate the presence of a backup path that is
   used for protection in case of failure of the primary path. The format of
   the MULTIPATH-BACKUP TLV is:

~~~
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |             Type              |             Length            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |       Backup Path Number      |             Flags             |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                         Backup Path ID 1                      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                         Backup Path ID 2                      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                              ...                              |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                         Backup Path ID n                      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

~~~
{: #figctrl title="MULTIPATH-BACKUP TLV format"}

   Type: TBD3 for "MULTIPATH-BACKUP" TLV

   Length: variable - multiple of 4-octets

   Backup Path Number: Number of backup path(s).

   Flags:

~~~
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |B|          Reserved           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~~~

> B: If set, indicates a pure backup path. This is a path that only
carries rerouted traffic after the protected path fails. If this flag
is not set, or if the MULTIPATH-BACKUP TLV is not carried in the PATH-ATTRIB
object of an ERO or SERO, then the path is assumed to be primary that
carries normal traffic.


   Backup Path ID(s): a series of 4-octet identifier(s) that identify the
   backup path(s) in the set that protect this primary path.
 

#  Operation

When the PCC wants to indicate to the PCE that it wants to get
multipaths instead of a single path, it can do one or both of the
following:

   1.  Send the MULTIPATH-CAP TLV in the OPEN object during session
       establishment.  This applies to all PCEP Tunnels on the PCC,
       unless overridden by PCEP Tunnel specific information.

   2.  Send the MULTIPATH-CAP TLV in the LSP object for a particular
       PCEP Tunnel in the PCRpt message.  This applies to the specified
       PCEP Tunnel and overrides the information from the OPEN object.

When PCE computes the path for a PCEP Tunnel, it MUST NOT return more
multipaths than the corresponding value of "Number of Multipaths"
from the MULTIPATH-CAP TLV.  If this TLV is absent (from both OPEN
and LSP objects), then the "Number of Multipaths" is assumed to be 1.

If the PCE supports this standard, then it MUST include the
MULTIPATH-CAP TLV in the OPEN object.  This tells the PCC that it can
report multiple ERO/RRO objects to this PCE.  If the PCE does not include
the MULTIPATH-CAP TLV in the OPEN object, then the PCC MUST assume
that the PCE does not support this standard and fall back to
reporting only a single ERO/RRO.

## Signaling Multiple Paths for Loadbalancing

The PATH-ATTRIB object can be used to signal multiple path(s) and indicate
(un)equal loadbalancing amongst the set of multipaths. In this case, the
PATH-ATTRIB is populated for each ERO or SERO as follows:

   1. The PCE assigns a unique Path ID to each ERO or SERO path and populates
      it inside the PATH-ATTRIB object. The Path ID is unique within the
      context of a PLSP or PCEP Tunnel.

   2. The MULTIPATH-WEIGHT TLV MAY be carried inside the PATH-ATTRIB object. A
      weight is populated to reflect the relative loadshare that is to be
      carried by the path. If the MULTIPATH-WEIGHT is not carried inside a
      PATH-ATTRIB object, the default weight 1 MUST be assumed when computing
      the loadshare.

   3. The fraction of flows carried by a specific primary path is derived
      from the ratio of its weight to the sum of all other multipath weights.

## Signaling Multiple Paths for Protection

The PATH-ATTRIB object can be used to describe a set of backup path(s) protecting
a primary path. In this case, the PATH-ATTRIB is populated for each ERO or SERO as
follows:

   1. The PCE assigns a unique Path ID to each ERO or SERO path and populates
      it inside the PATH-ATTRIB object. The Path ID is unique within the
      context of a PLSP or PCEP Tunnel.

   2. The MULTIPATH-BACKUP TLV MUST be added inside the PATH-ATTRIB object for each
      ERO or SERO that is protected. The backup path ID(s) are populated in the
      MULTIPATH-BACKUP TLV to reflect the set of backup path(s) protecting the
      primary path. The Length field and Backup Path Number in the MULTIPATH-BACKUP
      are updated according to the number of backup path ID(s) included.

   3. The MULTIPATH-BACKUP TLV MAY be added inside the PATH-ATTRIB object for each
      ERO or SERO that is unprotected. In this case, MULTIPATH-BACKUP does not carry
      any backup path IDs in the TLV. If the path acts as a pure backup -- i.e.
      the path only carries rerouted traffic after the protected path(s) fail-- then
      the B flag MUST be set.


#  PCEP Message Extensions

The RBNF of PCReq, PCRep, PCRpt, PCUpd and PCInit messages currently use intended-path and/or actual-path:

~~~
   <intended-path> ::= (<ERO>|<SERO>)
              [<intended-path>]

   <actual-path> ::= (<RRO>|<SRRO>)
              [<actual-path>]
~~~

In this standard, we extend these two elements:

~~~
   <intended-path> ::= [<PATH-ATTRIB>](<ERO>|<SERO>)
              [<intended-path>]

   <actual-path> ::= [<PATH-ATTRIB>](<RRO>|<SRRO>)
              [<actual-path>]
~~~


#  Examples

## SR Policy Candidate-Path with Multiple Segment-Lists

Consider how the following sample SR Policy, taken from  
{{!I-D.ietf-spring-segment-routing-policy}}, would be
represented in a PCRpt message.

~~~
        SR policy POL1 <headend, color, endpoint>
            Candidate-path CP1 <protocol-origin = 20, originator =
    100:1.1.1.1, discriminator = 1>
                Preference 200
                Weight W1, SID-List1 <SID11...SID1i>
                Weight W2, SID-List2 <SID21...SID2j>
            Candidate-path CP2 <protocol-origin = 20, originator =
    100:2.2.2.2, discriminator = 2>
                Preference 100
                Weight W3, SID-List3 <SID31...SID3i>
                Weight W4, SID-List4 <SID41...SID4j>
~~~

As specified in {{!I-D.barth-pce-segment-routing-policy-cp}}, CP1 and CP2 
are signaled as separate state-report elements and each has 
a unique PLSP-ID, assigned by the PCC. 
Let us assign PLSP-ID 100 to CP1 and PLSP-ID 200 to CP2. 

The state-report for CP1 can be encoded as:

~~~
<state-report> =  <LSP PLSP_ID=100>
                  <ASSOCIATION>
                  <END-POINT>
                  <PATH-ATTRIB PATH_ID=1 Weight_TLV=W1>
                  <ERO SID-List1>
                  <PATH-ATTRIB PATH_ID=2 Weight_TLV=W2>
                  <ERO SID-List2>
~~~

The state-report for CP2 can be encoded as:

~~~
<state-report> =  <LSP PLSP_ID=200>
                  <ASSOCIATION>
                  <END-POINT>
                  <PATH-ATTRIB PATH_ID=1 Weight_TLV=W3>
                  <ERO SID-List3>
                  <PATH-ATTRIB PATH_ID=2 Weight_TLV=W4>
                  <ERO SID-List4>
~~~

The above sample state-report elements only 
specify the minimum mandatory objects, 
of course other objects like SRP, LSPA, METRIC, etc., are allowed to be 
inserted.

Note that the syntax

~~~
<PATH-ATTRIB PATH_ID=1 Weight_TLV=W1>
~~~

, simply means that this is PATH-ATTRIB object 
with PATH_ID field set to "1" and 
with a Weight TLV carrying weight of "W1".


#  IANA Considerations

   IANA is requested to make the assignment of a new value for the
   existing "PCEP TLV Type Indicators" registry as follows:

~~~
 +------------+-----------------------------------+-----------------+
 | TLV Type   | TLV Name                          | Reference       |
 | Value      |                                   |                 |
 +------------+-----------------------------------+-----------------+
 | TBD1       | MULTIPATH-CAP                     | This document   |
 +------------+-----------------------------------+-----------------+
 | TBD2       | MULTIPATH-WEIGHT                  | This document   |
 +------------+-----------------------------------+-----------------+
 | TBD3       | MULTIPATH-BACKUP                  | This document   |
 +------------+-----------------------------------+-----------------+
~~~

#  Security Considerations

   None at this time.

#  Acknowledgement

   Thanks to Dhruv Dhody for ideas and discussion.

#  Contributors

~~~
   Andrew Stone
   Nokia

   Email: andrew.stone@nokia.com
~~~
